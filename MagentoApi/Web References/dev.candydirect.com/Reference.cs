//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MagentoApi
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Mage_Api_Model_Server_V2_HandlerBinding", Namespace="urn:Magento")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogInventoryStockItemEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(salesOrderInvoiceCommentEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(salesOrderInvoiceItemEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(orderItemIdQty))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(salesOrderShipmentCommentEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(salesOrderShipmentTrackEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(salesOrderShipmentItemEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(salesOrderStatusHistoryEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(salesOrderItemEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductLinkAttributeEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductAttributeMediaTypeEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductTierPriceEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductTypeEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductAttributeSetEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogAttributeOptionEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogAttributeEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogAssignedProduct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogCategoryEntityNoChildren))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogCategoryEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(customerGroupEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(complexFilter))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(directoryRegionEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(directoryCountryEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(existsFaltureEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(apiMethodEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(apiEntity))]
    public partial class MagentoService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {
        
        /// <remarks/>
        public MagentoService()
        {
            this.Url = "http://dev.candydirect.com/index.php/api/v2_soap/index/";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("endSessionReturn")]
        public bool endSession(string sessionId)
        {
            object[] results = this.Invoke("endSession", new object[] {
                        sessionId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginendSession(string sessionId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("endSession", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndendSession(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("loginReturn")]
        public string login(string username, string apiKey)
        {
            object[] results = this.Invoke("login", new object[] {
                        username,
                        apiKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginlogin(string username, string apiKey, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("login", new object[] {
                        username,
                        apiKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endlogin(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("startSessionReturn")]
        public string startSession()
        {
            object[] results = this.Invoke("startSession", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstartSession(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("startSession", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndstartSession(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("resourcesReturn")]
        public apiEntity[] resources(string sessionId)
        {
            object[] results = this.Invoke("resources", new object[] {
                        sessionId});
            return ((apiEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginresources(string sessionId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("resources", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public apiEntity[] Endresources(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((apiEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("globalFaultsReturn")]
        public existsFaltureEntity[] globalFaults(string sessionId)
        {
            object[] results = this.Invoke("globalFaults", new object[] {
                        sessionId});
            return ((existsFaltureEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginglobalFaults(string sessionId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("globalFaults", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public existsFaltureEntity[] EndglobalFaults(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((existsFaltureEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("resourceFaultsReturn")]
        public existsFaltureEntity[] resourceFaults(string resourceName, string sessionId)
        {
            object[] results = this.Invoke("resourceFaults", new object[] {
                        resourceName,
                        sessionId});
            return ((existsFaltureEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginresourceFaults(string resourceName, string sessionId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("resourceFaults", new object[] {
                        resourceName,
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public existsFaltureEntity[] EndresourceFaults(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((existsFaltureEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("countries")]
        public directoryCountryEntity[] directoryCountryList(string sessionId)
        {
            object[] results = this.Invoke("directoryCountryList", new object[] {
                        sessionId});
            return ((directoryCountryEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindirectoryCountryList(string sessionId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("directoryCountryList", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public directoryCountryEntity[] EnddirectoryCountryList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((directoryCountryEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("countries")]
        public directoryRegionEntity[] directoryRegionList(string sessionId, string country)
        {
            object[] results = this.Invoke("directoryRegionList", new object[] {
                        sessionId,
                        country});
            return ((directoryRegionEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindirectoryRegionList(string sessionId, string country, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("directoryRegionList", new object[] {
                        sessionId,
                        country}, callback, asyncState);
        }
        
        /// <remarks/>
        public directoryRegionEntity[] EnddirectoryRegionList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((directoryRegionEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("storeView")]
        public customerCustomerEntity[] customerCustomerList(string sessionId, filters filters)
        {
            object[] results = this.Invoke("customerCustomerList", new object[] {
                        sessionId,
                        filters});
            return ((customerCustomerEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerCustomerList(string sessionId, filters filters, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("customerCustomerList", new object[] {
                        sessionId,
                        filters}, callback, asyncState);
        }
        
        /// <remarks/>
        public customerCustomerEntity[] EndcustomerCustomerList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((customerCustomerEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int customerCustomerCreate(string sessionId, customerCustomerEntityToCreate customerData)
        {
            object[] results = this.Invoke("customerCustomerCreate", new object[] {
                        sessionId,
                        customerData});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerCustomerCreate(string sessionId, customerCustomerEntityToCreate customerData, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("customerCustomerCreate", new object[] {
                        sessionId,
                        customerData}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcustomerCustomerCreate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("customerInfo")]
        public customerCustomerEntity customerCustomerInfo(string sessionId, int customerId, string[] attributes)
        {
            object[] results = this.Invoke("customerCustomerInfo", new object[] {
                        sessionId,
                        customerId,
                        attributes});
            return ((customerCustomerEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerCustomerInfo(string sessionId, int customerId, string[] attributes, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("customerCustomerInfo", new object[] {
                        sessionId,
                        customerId,
                        attributes}, callback, asyncState);
        }
        
        /// <remarks/>
        public customerCustomerEntity EndcustomerCustomerInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((customerCustomerEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool customerCustomerUpdate(string sessionId, int customerId, customerCustomerEntityToCreate customerData)
        {
            object[] results = this.Invoke("customerCustomerUpdate", new object[] {
                        sessionId,
                        customerId,
                        customerData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerCustomerUpdate(string sessionId, int customerId, customerCustomerEntityToCreate customerData, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("customerCustomerUpdate", new object[] {
                        sessionId,
                        customerId,
                        customerData}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcustomerCustomerUpdate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool customerCustomerDelete(string sessionId, int customerId)
        {
            object[] results = this.Invoke("customerCustomerDelete", new object[] {
                        sessionId,
                        customerId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerCustomerDelete(string sessionId, int customerId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("customerCustomerDelete", new object[] {
                        sessionId,
                        customerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcustomerCustomerDelete(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public customerGroupEntity[] customerGroupList(string sessionId)
        {
            object[] results = this.Invoke("customerGroupList", new object[] {
                        sessionId});
            return ((customerGroupEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerGroupList(string sessionId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("customerGroupList", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public customerGroupEntity[] EndcustomerGroupList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((customerGroupEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public customerAddressEntity[] customerAddressList(string sessionId, int customerId)
        {
            object[] results = this.Invoke("customerAddressList", new object[] {
                        sessionId,
                        customerId});
            return ((customerAddressEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerAddressList(string sessionId, int customerId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("customerAddressList", new object[] {
                        sessionId,
                        customerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public customerAddressEntity[] EndcustomerAddressList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((customerAddressEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int customerAddressCreate(string sessionId, int customerId, customerAddressEntityCreate addressData)
        {
            object[] results = this.Invoke("customerAddressCreate", new object[] {
                        sessionId,
                        customerId,
                        addressData});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerAddressCreate(string sessionId, int customerId, customerAddressEntityCreate addressData, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("customerAddressCreate", new object[] {
                        sessionId,
                        customerId,
                        addressData}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcustomerAddressCreate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("info")]
        public customerAddressEntity customerAddressInfo(string sessionId, int addressId)
        {
            object[] results = this.Invoke("customerAddressInfo", new object[] {
                        sessionId,
                        addressId});
            return ((customerAddressEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerAddressInfo(string sessionId, int addressId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("customerAddressInfo", new object[] {
                        sessionId,
                        addressId}, callback, asyncState);
        }
        
        /// <remarks/>
        public customerAddressEntity EndcustomerAddressInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((customerAddressEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("info")]
        public bool customerAddressUpdate(string sessionId, int addressId, customerAddressEntityCreate addressData)
        {
            object[] results = this.Invoke("customerAddressUpdate", new object[] {
                        sessionId,
                        addressId,
                        addressData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerAddressUpdate(string sessionId, int addressId, customerAddressEntityCreate addressData, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("customerAddressUpdate", new object[] {
                        sessionId,
                        addressId,
                        addressData}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcustomerAddressUpdate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("info")]
        public bool customerAddressDelete(string sessionId, int addressId)
        {
            object[] results = this.Invoke("customerAddressDelete", new object[] {
                        sessionId,
                        addressId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerAddressDelete(string sessionId, int addressId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("customerAddressDelete", new object[] {
                        sessionId,
                        addressId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcustomerAddressDelete(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("storeView")]
        public int catalogCategoryCurrentStore(string sessionId, string storeView)
        {
            object[] results = this.Invoke("catalogCategoryCurrentStore", new object[] {
                        sessionId,
                        storeView});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryCurrentStore(string sessionId, string storeView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogCategoryCurrentStore", new object[] {
                        sessionId,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogCategoryCurrentStore(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("tree")]
        public catalogCategoryTree catalogCategoryTree(string sessionId, string parentId, string storeView)
        {
            object[] results = this.Invoke("catalogCategoryTree", new object[] {
                        sessionId,
                        parentId,
                        storeView});
            return ((catalogCategoryTree)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryTree(string sessionId, string parentId, string storeView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogCategoryTree", new object[] {
                        sessionId,
                        parentId,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogCategoryTree EndcatalogCategoryTree(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogCategoryTree)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("tree")]
        public catalogCategoryEntityNoChildren[] catalogCategoryLevel(string sessionId, string website, string storeView, string parentCategory)
        {
            object[] results = this.Invoke("catalogCategoryLevel", new object[] {
                        sessionId,
                        website,
                        storeView,
                        parentCategory});
            return ((catalogCategoryEntityNoChildren[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryLevel(string sessionId, string website, string storeView, string parentCategory, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogCategoryLevel", new object[] {
                        sessionId,
                        website,
                        storeView,
                        parentCategory}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogCategoryEntityNoChildren[] EndcatalogCategoryLevel(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogCategoryEntityNoChildren[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("info")]
        public catalogCategoryInfo catalogCategoryInfo(string sessionId, int categoryId, string storeView, string[] attributes)
        {
            object[] results = this.Invoke("catalogCategoryInfo", new object[] {
                        sessionId,
                        categoryId,
                        storeView,
                        attributes});
            return ((catalogCategoryInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryInfo(string sessionId, int categoryId, string storeView, string[] attributes, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogCategoryInfo", new object[] {
                        sessionId,
                        categoryId,
                        storeView,
                        attributes}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogCategoryInfo EndcatalogCategoryInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogCategoryInfo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("id")]
        public int catalogCategoryCreate(string sessionId, int parentId, catalogCategoryEntityCreate categoryData, string storeView)
        {
            object[] results = this.Invoke("catalogCategoryCreate", new object[] {
                        sessionId,
                        parentId,
                        categoryData,
                        storeView});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryCreate(string sessionId, int parentId, catalogCategoryEntityCreate categoryData, string storeView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogCategoryCreate", new object[] {
                        sessionId,
                        parentId,
                        categoryData,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogCategoryCreate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("id")]
        public bool catalogCategoryUpdate(string sessionId, int categoryId, catalogCategoryEntityCreate categoryData, string storeView)
        {
            object[] results = this.Invoke("catalogCategoryUpdate", new object[] {
                        sessionId,
                        categoryId,
                        categoryData,
                        storeView});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryUpdate(string sessionId, int categoryId, catalogCategoryEntityCreate categoryData, string storeView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogCategoryUpdate", new object[] {
                        sessionId,
                        categoryId,
                        categoryData,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogCategoryUpdate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("id")]
        public bool catalogCategoryMove(string sessionId, int categoryId, int parentId, string afterId)
        {
            object[] results = this.Invoke("catalogCategoryMove", new object[] {
                        sessionId,
                        categoryId,
                        parentId,
                        afterId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryMove(string sessionId, int categoryId, int parentId, string afterId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogCategoryMove", new object[] {
                        sessionId,
                        categoryId,
                        parentId,
                        afterId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogCategoryMove(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogCategoryDelete(string sessionId, int categoryId)
        {
            object[] results = this.Invoke("catalogCategoryDelete", new object[] {
                        sessionId,
                        categoryId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryDelete(string sessionId, int categoryId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogCategoryDelete", new object[] {
                        sessionId,
                        categoryId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogCategoryDelete(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogAssignedProduct[] catalogCategoryAssignedProducts(string sessionId, int categoryId)
        {
            object[] results = this.Invoke("catalogCategoryAssignedProducts", new object[] {
                        sessionId,
                        categoryId});
            return ((catalogAssignedProduct[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryAssignedProducts(string sessionId, int categoryId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogCategoryAssignedProducts", new object[] {
                        sessionId,
                        categoryId}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogAssignedProduct[] EndcatalogCategoryAssignedProducts(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogAssignedProduct[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogCategoryAssignProduct(string sessionId, int categoryId, string product, string position)
        {
            object[] results = this.Invoke("catalogCategoryAssignProduct", new object[] {
                        sessionId,
                        categoryId,
                        product,
                        position});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryAssignProduct(string sessionId, int categoryId, string product, string position, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogCategoryAssignProduct", new object[] {
                        sessionId,
                        categoryId,
                        product,
                        position}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogCategoryAssignProduct(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogCategoryUpdateProduct(string sessionId, int categoryId, string product, string position)
        {
            object[] results = this.Invoke("catalogCategoryUpdateProduct", new object[] {
                        sessionId,
                        categoryId,
                        product,
                        position});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryUpdateProduct(string sessionId, int categoryId, string product, string position, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogCategoryUpdateProduct", new object[] {
                        sessionId,
                        categoryId,
                        product,
                        position}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogCategoryUpdateProduct(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogCategoryRemoveProduct(string sessionId, int categoryId, string product)
        {
            object[] results = this.Invoke("catalogCategoryRemoveProduct", new object[] {
                        sessionId,
                        categoryId,
                        product});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryRemoveProduct(string sessionId, int categoryId, string product, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogCategoryRemoveProduct", new object[] {
                        sessionId,
                        categoryId,
                        product}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogCategoryRemoveProduct(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int catalogCategoryAttributeCurrentStore(string sessionId, string storeView)
        {
            object[] results = this.Invoke("catalogCategoryAttributeCurrentStore", new object[] {
                        sessionId,
                        storeView});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryAttributeCurrentStore(string sessionId, string storeView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogCategoryAttributeCurrentStore", new object[] {
                        sessionId,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogCategoryAttributeCurrentStore(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogAttributeEntity[] catalogCategoryAttributeList(string sessionId)
        {
            object[] results = this.Invoke("catalogCategoryAttributeList", new object[] {
                        sessionId});
            return ((catalogAttributeEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryAttributeList(string sessionId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogCategoryAttributeList", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogAttributeEntity[] EndcatalogCategoryAttributeList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogAttributeEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogAttributeOptionEntity[] catalogCategoryAttributeOptions(string sessionId, string attributeId, string storeView)
        {
            object[] results = this.Invoke("catalogCategoryAttributeOptions", new object[] {
                        sessionId,
                        attributeId,
                        storeView});
            return ((catalogAttributeOptionEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryAttributeOptions(string sessionId, string attributeId, string storeView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogCategoryAttributeOptions", new object[] {
                        sessionId,
                        attributeId,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogAttributeOptionEntity[] EndcatalogCategoryAttributeOptions(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogAttributeOptionEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("storeView")]
        public int catalogProductCurrentStore(string sessionId, string storeView)
        {
            object[] results = this.Invoke("catalogProductCurrentStore", new object[] {
                        sessionId,
                        storeView});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductCurrentStore(string sessionId, string storeView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductCurrentStore", new object[] {
                        sessionId,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductCurrentStore(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("storeView")]
        public catalogProductEntity[] catalogProductList(string sessionId, filters filters, string storeView)
        {
            object[] results = this.Invoke("catalogProductList", new object[] {
                        sessionId,
                        filters,
                        storeView});
            return ((catalogProductEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductList(string sessionId, filters filters, string storeView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductList", new object[] {
                        sessionId,
                        filters,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductEntity[] EndcatalogProductList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("info")]
        public catalogProductReturnEntity catalogProductInfo(string sessionId, string productId, string storeView, catalogProductRequestAttributes attributes)
        {
            object[] results = this.Invoke("catalogProductInfo", new object[] {
                        sessionId,
                        productId,
                        storeView,
                        attributes});
            return ((catalogProductReturnEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductInfo(string sessionId, string productId, string storeView, catalogProductRequestAttributes attributes, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductInfo", new object[] {
                        sessionId,
                        productId,
                        storeView,
                        attributes}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductReturnEntity EndcatalogProductInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductReturnEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int catalogProductCreate(string sessionId, string type, string set, string sku, catalogProductCreateEntity productData)
        {
            object[] results = this.Invoke("catalogProductCreate", new object[] {
                        sessionId,
                        type,
                        set,
                        sku,
                        productData});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductCreate(string sessionId, string type, string set, string sku, catalogProductCreateEntity productData, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductCreate", new object[] {
                        sessionId,
                        type,
                        set,
                        sku,
                        productData}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductCreate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int catalogProductUpdate(string sessionId, string product, catalogProductCreateEntity productData, string storeView)
        {
            object[] results = this.Invoke("catalogProductUpdate", new object[] {
                        sessionId,
                        product,
                        productData,
                        storeView});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductUpdate(string sessionId, string product, catalogProductCreateEntity productData, string storeView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductUpdate", new object[] {
                        sessionId,
                        product,
                        productData,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductUpdate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int catalogProductSetSpecialPrice(string sessionId, string product, string specialPrice, string fromDate, string toDate, string storeView)
        {
            object[] results = this.Invoke("catalogProductSetSpecialPrice", new object[] {
                        sessionId,
                        product,
                        specialPrice,
                        fromDate,
                        toDate,
                        storeView});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductSetSpecialPrice(string sessionId, string product, string specialPrice, string fromDate, string toDate, string storeView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductSetSpecialPrice", new object[] {
                        sessionId,
                        product,
                        specialPrice,
                        fromDate,
                        toDate,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductSetSpecialPrice(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductReturnEntity catalogProductGetSpecialPrice(string sessionId, string product, string storeView)
        {
            object[] results = this.Invoke("catalogProductGetSpecialPrice", new object[] {
                        sessionId,
                        product,
                        storeView});
            return ((catalogProductReturnEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductGetSpecialPrice(string sessionId, string product, string storeView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductGetSpecialPrice", new object[] {
                        sessionId,
                        product,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductReturnEntity EndcatalogProductGetSpecialPrice(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductReturnEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int catalogProductDelete(string sessionId, string product)
        {
            object[] results = this.Invoke("catalogProductDelete", new object[] {
                        sessionId,
                        product});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductDelete(string sessionId, string product, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductDelete", new object[] {
                        sessionId,
                        product}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductDelete(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("storeView")]
        public int catalogProductAttributeCurrentStore(string sessionId, string storeView)
        {
            object[] results = this.Invoke("catalogProductAttributeCurrentStore", new object[] {
                        sessionId,
                        storeView});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeCurrentStore(string sessionId, string storeView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductAttributeCurrentStore", new object[] {
                        sessionId,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductAttributeCurrentStore(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogAttributeEntity[] catalogProductAttributeList(string sessionId, int setId)
        {
            object[] results = this.Invoke("catalogProductAttributeList", new object[] {
                        sessionId,
                        setId});
            return ((catalogAttributeEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeList(string sessionId, int setId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductAttributeList", new object[] {
                        sessionId,
                        setId}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogAttributeEntity[] EndcatalogProductAttributeList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogAttributeEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogAttributeOptionEntity[] catalogProductAttributeOptions(string sessionId, string attributeId, string storeView)
        {
            object[] results = this.Invoke("catalogProductAttributeOptions", new object[] {
                        sessionId,
                        attributeId,
                        storeView});
            return ((catalogAttributeOptionEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeOptions(string sessionId, string attributeId, string storeView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductAttributeOptions", new object[] {
                        sessionId,
                        attributeId,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogAttributeOptionEntity[] EndcatalogProductAttributeOptions(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogAttributeOptionEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductAttributeSetEntity[] catalogProductAttributeSetList(string sessionId)
        {
            object[] results = this.Invoke("catalogProductAttributeSetList", new object[] {
                        sessionId});
            return ((catalogProductAttributeSetEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeSetList(string sessionId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductAttributeSetList", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductAttributeSetEntity[] EndcatalogProductAttributeSetList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductAttributeSetEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductTypeEntity[] catalogProductTypeList(string sessionId)
        {
            object[] results = this.Invoke("catalogProductTypeList", new object[] {
                        sessionId});
            return ((catalogProductTypeEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductTypeList(string sessionId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductTypeList", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductTypeEntity[] EndcatalogProductTypeList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductTypeEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductTierPriceEntity[] catalogProductAttributeTierPriceInfo(string sessionId, string sku)
        {
            object[] results = this.Invoke("catalogProductAttributeTierPriceInfo", new object[] {
                        sessionId,
                        sku});
            return ((catalogProductTierPriceEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeTierPriceInfo(string sessionId, string sku, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductAttributeTierPriceInfo", new object[] {
                        sessionId,
                        sku}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductTierPriceEntity[] EndcatalogProductAttributeTierPriceInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductTierPriceEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int catalogProductAttributeTierPriceUpdate(string sessionId, string productId, catalogProductTierPriceEntity[] tier_price)
        {
            object[] results = this.Invoke("catalogProductAttributeTierPriceUpdate", new object[] {
                        sessionId,
                        productId,
                        tier_price});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeTierPriceUpdate(string sessionId, string productId, catalogProductTierPriceEntity[] tier_price, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductAttributeTierPriceUpdate", new object[] {
                        sessionId,
                        productId,
                        tier_price}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductAttributeTierPriceUpdate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("storeView")]
        public int catalogProductAttributeMediaCurrentStore(string sessionId, string storeView)
        {
            object[] results = this.Invoke("catalogProductAttributeMediaCurrentStore", new object[] {
                        sessionId,
                        storeView});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeMediaCurrentStore(string sessionId, string storeView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductAttributeMediaCurrentStore", new object[] {
                        sessionId,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductAttributeMediaCurrentStore(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductImageEntity[] catalogProductAttributeMediaList(string sessionId, string product, string storeView)
        {
            object[] results = this.Invoke("catalogProductAttributeMediaList", new object[] {
                        sessionId,
                        product,
                        storeView});
            return ((catalogProductImageEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeMediaList(string sessionId, string product, string storeView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductAttributeMediaList", new object[] {
                        sessionId,
                        product,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductImageEntity[] EndcatalogProductAttributeMediaList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductImageEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductImageEntity catalogProductAttributeMediaInfo(string sessionId, string product, string file, string storeView)
        {
            object[] results = this.Invoke("catalogProductAttributeMediaInfo", new object[] {
                        sessionId,
                        product,
                        file,
                        storeView});
            return ((catalogProductImageEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeMediaInfo(string sessionId, string product, string file, string storeView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductAttributeMediaInfo", new object[] {
                        sessionId,
                        product,
                        file,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductImageEntity EndcatalogProductAttributeMediaInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductImageEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductAttributeMediaTypeEntity[] catalogProductAttributeMediaTypes(string sessionId, string setId)
        {
            object[] results = this.Invoke("catalogProductAttributeMediaTypes", new object[] {
                        sessionId,
                        setId});
            return ((catalogProductAttributeMediaTypeEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeMediaTypes(string sessionId, string setId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductAttributeMediaTypes", new object[] {
                        sessionId,
                        setId}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductAttributeMediaTypeEntity[] EndcatalogProductAttributeMediaTypes(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductAttributeMediaTypeEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string catalogProductAttributeMediaCreate(string sessionId, string product, catalogProductAttributeMediaCreateEntity data, string storeView)
        {
            object[] results = this.Invoke("catalogProductAttributeMediaCreate", new object[] {
                        sessionId,
                        product,
                        data,
                        storeView});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeMediaCreate(string sessionId, string product, catalogProductAttributeMediaCreateEntity data, string storeView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductAttributeMediaCreate", new object[] {
                        sessionId,
                        product,
                        data,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndcatalogProductAttributeMediaCreate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int catalogProductAttributeMediaUpdate(string sessionId, string product, string file, catalogProductAttributeMediaCreateEntity data, string storeView)
        {
            object[] results = this.Invoke("catalogProductAttributeMediaUpdate", new object[] {
                        sessionId,
                        product,
                        file,
                        data,
                        storeView});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeMediaUpdate(string sessionId, string product, string file, catalogProductAttributeMediaCreateEntity data, string storeView, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductAttributeMediaUpdate", new object[] {
                        sessionId,
                        product,
                        file,
                        data,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductAttributeMediaUpdate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int catalogProductAttributeMediaRemove(string sessionId, string product, string file)
        {
            object[] results = this.Invoke("catalogProductAttributeMediaRemove", new object[] {
                        sessionId,
                        product,
                        file});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeMediaRemove(string sessionId, string product, string file, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductAttributeMediaRemove", new object[] {
                        sessionId,
                        product,
                        file}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductAttributeMediaRemove(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductLinkEntity[] catalogProductLinkList(string sessionId, string type, string product)
        {
            object[] results = this.Invoke("catalogProductLinkList", new object[] {
                        sessionId,
                        type,
                        product});
            return ((catalogProductLinkEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductLinkList(string sessionId, string type, string product, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductLinkList", new object[] {
                        sessionId,
                        type,
                        product}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductLinkEntity[] EndcatalogProductLinkList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductLinkEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string catalogProductLinkAssign(string sessionId, string type, string product, string linkedProduct, catalogProductLinkEntity data)
        {
            object[] results = this.Invoke("catalogProductLinkAssign", new object[] {
                        sessionId,
                        type,
                        product,
                        linkedProduct,
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductLinkAssign(string sessionId, string type, string product, string linkedProduct, catalogProductLinkEntity data, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductLinkAssign", new object[] {
                        sessionId,
                        type,
                        product,
                        linkedProduct,
                        data}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndcatalogProductLinkAssign(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string catalogProductLinkUpdate(string sessionId, string type, string product, string linkedProduct, catalogProductLinkEntity data)
        {
            object[] results = this.Invoke("catalogProductLinkUpdate", new object[] {
                        sessionId,
                        type,
                        product,
                        linkedProduct,
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductLinkUpdate(string sessionId, string type, string product, string linkedProduct, catalogProductLinkEntity data, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductLinkUpdate", new object[] {
                        sessionId,
                        type,
                        product,
                        linkedProduct,
                        data}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndcatalogProductLinkUpdate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string catalogProductLinkRemove(string sessionId, string type, string product, string linkedProduct)
        {
            object[] results = this.Invoke("catalogProductLinkRemove", new object[] {
                        sessionId,
                        type,
                        product,
                        linkedProduct});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductLinkRemove(string sessionId, string type, string product, string linkedProduct, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductLinkRemove", new object[] {
                        sessionId,
                        type,
                        product,
                        linkedProduct}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndcatalogProductLinkRemove(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string[] catalogProductLinkTypes(string sessionId)
        {
            object[] results = this.Invoke("catalogProductLinkTypes", new object[] {
                        sessionId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductLinkTypes(string sessionId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductLinkTypes", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndcatalogProductLinkTypes(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductLinkAttributeEntity[] catalogProductLinkAttributes(string sessionId, string type)
        {
            object[] results = this.Invoke("catalogProductLinkAttributes", new object[] {
                        sessionId,
                        type});
            return ((catalogProductLinkAttributeEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductLinkAttributes(string sessionId, string type, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogProductLinkAttributes", new object[] {
                        sessionId,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductLinkAttributeEntity[] EndcatalogProductLinkAttributes(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductLinkAttributeEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public salesOrderEntity[] salesOrderList(string sessionId, filters filters)
        {
            object[] results = this.Invoke("salesOrderList", new object[] {
                        sessionId,
                        filters});
            return ((salesOrderEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderList(string sessionId, filters filters, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderList", new object[] {
                        sessionId,
                        filters}, callback, asyncState);
        }
        
        /// <remarks/>
        public salesOrderEntity[] EndsalesOrderList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((salesOrderEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public salesOrderEntity salesOrderInfo(string sessionId, string orderIncrementId)
        {
            object[] results = this.Invoke("salesOrderInfo", new object[] {
                        sessionId,
                        orderIncrementId});
            return ((salesOrderEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderInfo(string sessionId, string orderIncrementId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderInfo", new object[] {
                        sessionId,
                        orderIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public salesOrderEntity EndsalesOrderInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((salesOrderEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int salesOrderAddComment(string sessionId, string orderIncrementId, string status, string comment, string notify)
        {
            object[] results = this.Invoke("salesOrderAddComment", new object[] {
                        sessionId,
                        orderIncrementId,
                        status,
                        comment,
                        notify});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderAddComment(string sessionId, string orderIncrementId, string status, string comment, string notify, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderAddComment", new object[] {
                        sessionId,
                        orderIncrementId,
                        status,
                        comment,
                        notify}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndsalesOrderAddComment(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int salesOrderHold(string sessionId, string orderIncrementId)
        {
            object[] results = this.Invoke("salesOrderHold", new object[] {
                        sessionId,
                        orderIncrementId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderHold(string sessionId, string orderIncrementId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderHold", new object[] {
                        sessionId,
                        orderIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndsalesOrderHold(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int salesOrderUnhold(string sessionId, string orderIncrementId)
        {
            object[] results = this.Invoke("salesOrderUnhold", new object[] {
                        sessionId,
                        orderIncrementId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderUnhold(string sessionId, string orderIncrementId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderUnhold", new object[] {
                        sessionId,
                        orderIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndsalesOrderUnhold(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int salesOrderCancel(string sessionId, string orderIncrementId)
        {
            object[] results = this.Invoke("salesOrderCancel", new object[] {
                        sessionId,
                        orderIncrementId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderCancel(string sessionId, string orderIncrementId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderCancel", new object[] {
                        sessionId,
                        orderIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndsalesOrderCancel(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public salesOrderShipmentEntity[] salesOrderShipmentList(string sessionId, filters filters)
        {
            object[] results = this.Invoke("salesOrderShipmentList", new object[] {
                        sessionId,
                        filters});
            return ((salesOrderShipmentEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderShipmentList(string sessionId, filters filters, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderShipmentList", new object[] {
                        sessionId,
                        filters}, callback, asyncState);
        }
        
        /// <remarks/>
        public salesOrderShipmentEntity[] EndsalesOrderShipmentList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((salesOrderShipmentEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public salesOrderShipmentEntity salesOrderShipmentInfo(string sessionId, string shipmentIncrementId)
        {
            object[] results = this.Invoke("salesOrderShipmentInfo", new object[] {
                        sessionId,
                        shipmentIncrementId});
            return ((salesOrderShipmentEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderShipmentInfo(string sessionId, string shipmentIncrementId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderShipmentInfo", new object[] {
                        sessionId,
                        shipmentIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public salesOrderShipmentEntity EndsalesOrderShipmentInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((salesOrderShipmentEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("shipmentIncrementId")]
        public string salesOrderShipmentCreate(string sessionId, string orderIncrementId, orderItemIdQty[] itemsQty, string comment, int email, int includeComment)
        {
            object[] results = this.Invoke("salesOrderShipmentCreate", new object[] {
                        sessionId,
                        orderIncrementId,
                        itemsQty,
                        comment,
                        email,
                        includeComment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderShipmentCreate(string sessionId, string orderIncrementId, orderItemIdQty[] itemsQty, string comment, int email, int includeComment, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderShipmentCreate", new object[] {
                        sessionId,
                        orderIncrementId,
                        itemsQty,
                        comment,
                        email,
                        includeComment}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndsalesOrderShipmentCreate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("shipmentIncrementId")]
        public int salesOrderShipmentAddComment(string sessionId, string shipmentIncrementId, string comment, string email, string includeInEmail)
        {
            object[] results = this.Invoke("salesOrderShipmentAddComment", new object[] {
                        sessionId,
                        shipmentIncrementId,
                        comment,
                        email,
                        includeInEmail});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderShipmentAddComment(string sessionId, string shipmentIncrementId, string comment, string email, string includeInEmail, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderShipmentAddComment", new object[] {
                        sessionId,
                        shipmentIncrementId,
                        comment,
                        email,
                        includeInEmail}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndsalesOrderShipmentAddComment(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int salesOrderShipmentAddTrack(string sessionId, string shipmentIncrementId, string carrier, string title, string trackNumber)
        {
            object[] results = this.Invoke("salesOrderShipmentAddTrack", new object[] {
                        sessionId,
                        shipmentIncrementId,
                        carrier,
                        title,
                        trackNumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderShipmentAddTrack(string sessionId, string shipmentIncrementId, string carrier, string title, string trackNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderShipmentAddTrack", new object[] {
                        sessionId,
                        shipmentIncrementId,
                        carrier,
                        title,
                        trackNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndsalesOrderShipmentAddTrack(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int salesOrderShipmentRemoveTrack(string sessionId, string shipmentIncrementId, string trackId)
        {
            object[] results = this.Invoke("salesOrderShipmentRemoveTrack", new object[] {
                        sessionId,
                        shipmentIncrementId,
                        trackId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderShipmentRemoveTrack(string sessionId, string shipmentIncrementId, string trackId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderShipmentRemoveTrack", new object[] {
                        sessionId,
                        shipmentIncrementId,
                        trackId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndsalesOrderShipmentRemoveTrack(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public associativeEntity[] salesOrderShipmentGetCarriers(string sessionId, string orderIncrementId)
        {
            object[] results = this.Invoke("salesOrderShipmentGetCarriers", new object[] {
                        sessionId,
                        orderIncrementId});
            return ((associativeEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderShipmentGetCarriers(string sessionId, string orderIncrementId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderShipmentGetCarriers", new object[] {
                        sessionId,
                        orderIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public associativeEntity[] EndsalesOrderShipmentGetCarriers(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((associativeEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public salesOrderInvoiceEntity[] salesOrderInvoiceList(string sessionId, filters filters)
        {
            object[] results = this.Invoke("salesOrderInvoiceList", new object[] {
                        sessionId,
                        filters});
            return ((salesOrderInvoiceEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderInvoiceList(string sessionId, filters filters, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderInvoiceList", new object[] {
                        sessionId,
                        filters}, callback, asyncState);
        }
        
        /// <remarks/>
        public salesOrderInvoiceEntity[] EndsalesOrderInvoiceList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((salesOrderInvoiceEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public salesOrderInvoiceEntity salesOrderInvoiceInfo(string sessionId, string invoiceIncrementId)
        {
            object[] results = this.Invoke("salesOrderInvoiceInfo", new object[] {
                        sessionId,
                        invoiceIncrementId});
            return ((salesOrderInvoiceEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderInvoiceInfo(string sessionId, string invoiceIncrementId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderInvoiceInfo", new object[] {
                        sessionId,
                        invoiceIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public salesOrderInvoiceEntity EndsalesOrderInvoiceInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((salesOrderInvoiceEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string salesOrderInvoiceCreate(string sessionId, string invoiceIncrementId, orderItemIdQty[] itemsQty, string comment, string email, string includeComment)
        {
            object[] results = this.Invoke("salesOrderInvoiceCreate", new object[] {
                        sessionId,
                        invoiceIncrementId,
                        itemsQty,
                        comment,
                        email,
                        includeComment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderInvoiceCreate(string sessionId, string invoiceIncrementId, orderItemIdQty[] itemsQty, string comment, string email, string includeComment, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderInvoiceCreate", new object[] {
                        sessionId,
                        invoiceIncrementId,
                        itemsQty,
                        comment,
                        email,
                        includeComment}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndsalesOrderInvoiceCreate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string salesOrderInvoiceAddComment(string sessionId, string invoiceIncrementId, string comment, string email, string includeComment)
        {
            object[] results = this.Invoke("salesOrderInvoiceAddComment", new object[] {
                        sessionId,
                        invoiceIncrementId,
                        comment,
                        email,
                        includeComment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderInvoiceAddComment(string sessionId, string invoiceIncrementId, string comment, string email, string includeComment, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderInvoiceAddComment", new object[] {
                        sessionId,
                        invoiceIncrementId,
                        comment,
                        email,
                        includeComment}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndsalesOrderInvoiceAddComment(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string salesOrderInvoiceCapture(string sessionId, string invoiceIncrementId)
        {
            object[] results = this.Invoke("salesOrderInvoiceCapture", new object[] {
                        sessionId,
                        invoiceIncrementId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderInvoiceCapture(string sessionId, string invoiceIncrementId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderInvoiceCapture", new object[] {
                        sessionId,
                        invoiceIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndsalesOrderInvoiceCapture(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string salesOrderInvoiceVoid(string sessionId, string invoiceIncrementId)
        {
            object[] results = this.Invoke("salesOrderInvoiceVoid", new object[] {
                        sessionId,
                        invoiceIncrementId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderInvoiceVoid(string sessionId, string invoiceIncrementId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderInvoiceVoid", new object[] {
                        sessionId,
                        invoiceIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndsalesOrderInvoiceVoid(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string salesOrderInvoiceCancel(string sessionId, string invoiceIncrementId)
        {
            object[] results = this.Invoke("salesOrderInvoiceCancel", new object[] {
                        sessionId,
                        invoiceIncrementId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderInvoiceCancel(string sessionId, string invoiceIncrementId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderInvoiceCancel", new object[] {
                        sessionId,
                        invoiceIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndsalesOrderInvoiceCancel(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogInventoryStockItemEntity[] catalogInventoryStockItemList(string sessionId, string[] products)
        {
            object[] results = this.Invoke("catalogInventoryStockItemList", new object[] {
                        sessionId,
                        products});
            return ((catalogInventoryStockItemEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogInventoryStockItemList(string sessionId, string[] products, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogInventoryStockItemList", new object[] {
                        sessionId,
                        products}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogInventoryStockItemEntity[] EndcatalogInventoryStockItemList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogInventoryStockItemEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int catalogInventoryStockItemUpdate(string sessionId, string product, catalogInventoryStockItemUpdateEntity data)
        {
            object[] results = this.Invoke("catalogInventoryStockItemUpdate", new object[] {
                        sessionId,
                        product,
                        data});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogInventoryStockItemUpdate(string sessionId, string product, catalogInventoryStockItemUpdateEntity data, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogInventoryStockItemUpdate", new object[] {
                        sessionId,
                        product,
                        data}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogInventoryStockItemUpdate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public customerCommentDetail salesOrderCustomerComment(string sessionId, int orderId)
        {
            object[] results = this.Invoke("salesOrderCustomerComment", new object[] {
                        sessionId,
                        orderId});
            return ((customerCommentDetail)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderCustomerComment(string sessionId, int orderId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("salesOrderCustomerComment", new object[] {
                        sessionId,
                        orderId}, callback, asyncState);
        }
        
        /// <remarks/>
        public customerCommentDetail EndsalesOrderCustomerComment(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((customerCommentDetail)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Mage_Api_Model_Server_V2_HandlerAction", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogAssignedProductDetail catalogCategoryAssignedProductsDetail(string sessionId, int categoryId, string storeView, filters filters)
        {
            object[] results = this.Invoke("catalogCategoryAssignedProductsDetail", new object[] {
                        sessionId,
                        categoryId,
                        storeView,
                        filters});
            return ((catalogAssignedProductDetail)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryAssignedProductsDetail(string sessionId, int categoryId, string storeView, filters filters, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("catalogCategoryAssignedProductsDetail", new object[] {
                        sessionId,
                        categoryId,
                        storeView,
                        filters}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogAssignedProductDetail EndcatalogCategoryAssignedProductsDetail(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogAssignedProductDetail)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class apiEntity
    {
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string[] aliases;
        
        /// <remarks/>
        public apiMethodEntity[] methods;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class apiMethodEntity
    {
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public string path;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string[] aliases;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogAssignedProductDetail
    {
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string gift_message_sender;
        
        /// <remarks/>
        public string gift_message_recipient;
        
        /// <remarks/>
        public string gift_message;
        
        /// <remarks/>
        public string customer_comment;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class customerCommentDetail
    {
        
        /// <remarks/>
        public string gift_message_sender;
        
        /// <remarks/>
        public string gift_message_recipient;
        
        /// <remarks/>
        public string gift_message;
        
        /// <remarks/>
        public string customer_comment;
        
        /// <remarks/>
        public string coupon_code;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogInventoryStockItemUpdateEntity
    {
        
        /// <remarks/>
        public string qty;
        
        /// <remarks/>
        public int is_in_stock;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_in_stockSpecified;
        
        /// <remarks/>
        public int manage_stock;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool manage_stockSpecified;
        
        /// <remarks/>
        public int use_config_manage_stock;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool use_config_manage_stockSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogInventoryStockItemEntity
    {
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string qty;
        
        /// <remarks/>
        public string is_in_stock;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderInvoiceCommentEntity
    {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string comment;
        
        /// <remarks/>
        public string is_customer_notified;
        
        /// <remarks/>
        public string comment_id;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderInvoiceItemEntity
    {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string weee_tax_applied;
        
        /// <remarks/>
        public string qty;
        
        /// <remarks/>
        public string cost;
        
        /// <remarks/>
        public string price;
        
        /// <remarks/>
        public string tax_amount;
        
        /// <remarks/>
        public string row_total;
        
        /// <remarks/>
        public string base_price;
        
        /// <remarks/>
        public string base_tax_amount;
        
        /// <remarks/>
        public string base_row_total;
        
        /// <remarks/>
        public string base_weee_tax_applied_amount;
        
        /// <remarks/>
        public string base_weee_tax_applied_row_amount;
        
        /// <remarks/>
        public string weee_tax_applied_amount;
        
        /// <remarks/>
        public string weee_tax_applied_row_amount;
        
        /// <remarks/>
        public string weee_tax_disposition;
        
        /// <remarks/>
        public string weee_tax_row_disposition;
        
        /// <remarks/>
        public string base_weee_tax_disposition;
        
        /// <remarks/>
        public string base_weee_tax_row_disposition;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string order_item_id;
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string item_id;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderInvoiceEntity
    {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string store_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string global_currency_code;
        
        /// <remarks/>
        public string base_currency_code;
        
        /// <remarks/>
        public string store_currency_code;
        
        /// <remarks/>
        public string order_currency_code;
        
        /// <remarks/>
        public string store_to_base_rate;
        
        /// <remarks/>
        public string store_to_order_rate;
        
        /// <remarks/>
        public string base_to_global_rate;
        
        /// <remarks/>
        public string base_to_order_rate;
        
        /// <remarks/>
        public string subtotal;
        
        /// <remarks/>
        public string base_subtotal;
        
        /// <remarks/>
        public string base_grand_total;
        
        /// <remarks/>
        public string discount_amount;
        
        /// <remarks/>
        public string base_discount_amount;
        
        /// <remarks/>
        public string shipping_amount;
        
        /// <remarks/>
        public string base_shipping_amount;
        
        /// <remarks/>
        public string tax_amount;
        
        /// <remarks/>
        public string base_tax_amount;
        
        /// <remarks/>
        public string billing_address_id;
        
        /// <remarks/>
        public string billing_firstname;
        
        /// <remarks/>
        public string billing_lastname;
        
        /// <remarks/>
        public string order_id;
        
        /// <remarks/>
        public string order_increment_id;
        
        /// <remarks/>
        public string order_created_at;
        
        /// <remarks/>
        public string state;
        
        /// <remarks/>
        public string grand_total;
        
        /// <remarks/>
        public string invoice_id;
        
        /// <remarks/>
        public salesOrderInvoiceItemEntity[] items;
        
        /// <remarks/>
        public salesOrderInvoiceCommentEntity[] comments;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class orderItemIdQty
    {
        
        /// <remarks/>
        public int order_item_id;
        
        /// <remarks/>
        public double qty;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderShipmentCommentEntity
    {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string comment;
        
        /// <remarks/>
        public string is_customer_notified;
        
        /// <remarks/>
        public string comment_id;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderShipmentTrackEntity
    {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string carrier_code;
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public string number;
        
        /// <remarks/>
        public string order_id;
        
        /// <remarks/>
        public string track_id;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderShipmentItemEntity
    {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string order_item_id;
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string weight;
        
        /// <remarks/>
        public string price;
        
        /// <remarks/>
        public string qty;
        
        /// <remarks/>
        public string item_id;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderShipmentEntity
    {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string store_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string shipping_address_id;
        
        /// <remarks/>
        public string shipping_firstname;
        
        /// <remarks/>
        public string shipping_lastname;
        
        /// <remarks/>
        public string order_id;
        
        /// <remarks/>
        public string order_increment_id;
        
        /// <remarks/>
        public string order_created_at;
        
        /// <remarks/>
        public string total_qty;
        
        /// <remarks/>
        public string shipment_id;
        
        /// <remarks/>
        public salesOrderShipmentItemEntity[] items;
        
        /// <remarks/>
        public salesOrderShipmentTrackEntity[] tracks;
        
        /// <remarks/>
        public salesOrderShipmentCommentEntity[] comments;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderStatusHistoryEntity
    {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string is_customer_notified;
        
        /// <remarks/>
        public string status;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderPaymentEntity
    {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string amount_ordered;
        
        /// <remarks/>
        public string shipping_amount;
        
        /// <remarks/>
        public string base_amount_ordered;
        
        /// <remarks/>
        public string base_shipping_amount;
        
        /// <remarks/>
        public string method;
        
        /// <remarks/>
        public string po_number;
        
        /// <remarks/>
        public string cc_type;
        
        /// <remarks/>
        public string cc_number_enc;
        
        /// <remarks/>
        public string cc_last4;
        
        /// <remarks/>
        public string cc_owner;
        
        /// <remarks/>
        public string cc_exp_month;
        
        /// <remarks/>
        public string cc_exp_year;
        
        /// <remarks/>
        public string cc_ss_start_month;
        
        /// <remarks/>
        public string cc_ss_start_year;
        
        /// <remarks/>
        public string payment_id;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderItemEntity
    {
        
        /// <remarks/>
        public string item_id;
        
        /// <remarks/>
        public string order_id;
        
        /// <remarks/>
        public string quote_item_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string product_type;
        
        /// <remarks/>
        public string product_options;
        
        /// <remarks/>
        public string weight;
        
        /// <remarks/>
        public string is_virtual;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string applied_rule_ids;
        
        /// <remarks/>
        public string free_shipping;
        
        /// <remarks/>
        public string is_qty_decimal;
        
        /// <remarks/>
        public string no_discount;
        
        /// <remarks/>
        public string qty_canceled;
        
        /// <remarks/>
        public string qty_invoiced;
        
        /// <remarks/>
        public string qty_ordered;
        
        /// <remarks/>
        public string qty_refunded;
        
        /// <remarks/>
        public string qty_shipped;
        
        /// <remarks/>
        public string cost;
        
        /// <remarks/>
        public string price;
        
        /// <remarks/>
        public string base_price;
        
        /// <remarks/>
        public string original_price;
        
        /// <remarks/>
        public string base_original_price;
        
        /// <remarks/>
        public string tax_percent;
        
        /// <remarks/>
        public string tax_amount;
        
        /// <remarks/>
        public string base_tax_amount;
        
        /// <remarks/>
        public string tax_invoiced;
        
        /// <remarks/>
        public string base_tax_invoiced;
        
        /// <remarks/>
        public string discount_percent;
        
        /// <remarks/>
        public string discount_amount;
        
        /// <remarks/>
        public string base_discount_amount;
        
        /// <remarks/>
        public string discount_invoiced;
        
        /// <remarks/>
        public string base_discount_invoiced;
        
        /// <remarks/>
        public string amount_refunded;
        
        /// <remarks/>
        public string base_amount_refunded;
        
        /// <remarks/>
        public string row_total;
        
        /// <remarks/>
        public string base_row_total;
        
        /// <remarks/>
        public string row_invoiced;
        
        /// <remarks/>
        public string base_row_invoiced;
        
        /// <remarks/>
        public string row_weight;
        
        /// <remarks/>
        public string gift_message_available;
        
        /// <remarks/>
        public string base_tax_before_discount;
        
        /// <remarks/>
        public string tax_before_discount;
        
        /// <remarks/>
        public string weee_tax_applied;
        
        /// <remarks/>
        public string weee_tax_applied_amount;
        
        /// <remarks/>
        public string weee_tax_applied_row_amount;
        
        /// <remarks/>
        public string base_weee_tax_applied_amount;
        
        /// <remarks/>
        public string base_weee_tax_applied_row_amount;
        
        /// <remarks/>
        public string weee_tax_disposition;
        
        /// <remarks/>
        public string weee_tax_row_disposition;
        
        /// <remarks/>
        public string base_weee_tax_disposition;
        
        /// <remarks/>
        public string base_weee_tax_row_disposition;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderAddressEntity
    {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string address_type;
        
        /// <remarks/>
        public string firstname;
        
        /// <remarks/>
        public string lastname;
        
        /// <remarks/>
        public string company;
        
        /// <remarks/>
        public string street;
        
        /// <remarks/>
        public string city;
        
        /// <remarks/>
        public string region;
        
        /// <remarks/>
        public string postcode;
        
        /// <remarks/>
        public string country_id;
        
        /// <remarks/>
        public string telephone;
        
        /// <remarks/>
        public string fax;
        
        /// <remarks/>
        public string region_id;
        
        /// <remarks/>
        public string address_id;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderEntity
    {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string store_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string customer_id;
        
        /// <remarks/>
        public string tax_amount;
        
        /// <remarks/>
        public string shipping_amount;
        
        /// <remarks/>
        public string discount_amount;
        
        /// <remarks/>
        public string subtotal;
        
        /// <remarks/>
        public string grand_total;
        
        /// <remarks/>
        public string total_paid;
        
        /// <remarks/>
        public string total_refunded;
        
        /// <remarks/>
        public string total_qty_ordered;
        
        /// <remarks/>
        public string total_canceled;
        
        /// <remarks/>
        public string total_invoiced;
        
        /// <remarks/>
        public string total_online_refunded;
        
        /// <remarks/>
        public string total_offline_refunded;
        
        /// <remarks/>
        public string base_tax_amount;
        
        /// <remarks/>
        public string base_shipping_amount;
        
        /// <remarks/>
        public string base_discount_amount;
        
        /// <remarks/>
        public string base_subtotal;
        
        /// <remarks/>
        public string base_grand_total;
        
        /// <remarks/>
        public string base_total_paid;
        
        /// <remarks/>
        public string base_total_refunded;
        
        /// <remarks/>
        public string base_total_qty_ordered;
        
        /// <remarks/>
        public string base_total_canceled;
        
        /// <remarks/>
        public string base_total_invoiced;
        
        /// <remarks/>
        public string base_total_online_refunded;
        
        /// <remarks/>
        public string base_total_offline_refunded;
        
        /// <remarks/>
        public string billing_address_id;
        
        /// <remarks/>
        public string billing_firstname;
        
        /// <remarks/>
        public string billing_lastname;
        
        /// <remarks/>
        public string shipping_address_id;
        
        /// <remarks/>
        public string shipping_firstname;
        
        /// <remarks/>
        public string shipping_lastname;
        
        /// <remarks/>
        public string billing_name;
        
        /// <remarks/>
        public string shipping_name;
        
        /// <remarks/>
        public string store_to_base_rate;
        
        /// <remarks/>
        public string store_to_order_rate;
        
        /// <remarks/>
        public string base_to_global_rate;
        
        /// <remarks/>
        public string base_to_order_rate;
        
        /// <remarks/>
        public string weight;
        
        /// <remarks/>
        public string store_name;
        
        /// <remarks/>
        public string remote_ip;
        
        /// <remarks/>
        public string status;
        
        /// <remarks/>
        public string state;
        
        /// <remarks/>
        public string applied_rule_ids;
        
        /// <remarks/>
        public string global_currency_code;
        
        /// <remarks/>
        public string base_currency_code;
        
        /// <remarks/>
        public string store_currency_code;
        
        /// <remarks/>
        public string order_currency_code;
        
        /// <remarks/>
        public string shipping_method;
        
        /// <remarks/>
        public string shipping_description;
        
        /// <remarks/>
        public string customer_email;
        
        /// <remarks/>
        public string customer_firstname;
        
        /// <remarks/>
        public string customer_lastname;
        
        /// <remarks/>
        public string quote_id;
        
        /// <remarks/>
        public string is_virtual;
        
        /// <remarks/>
        public string customer_group_id;
        
        /// <remarks/>
        public string customer_note_notify;
        
        /// <remarks/>
        public string customer_is_guest;
        
        /// <remarks/>
        public string email_sent;
        
        /// <remarks/>
        public string order_id;
        
        /// <remarks/>
        public salesOrderAddressEntity shipping_address;
        
        /// <remarks/>
        public salesOrderAddressEntity billing_address;
        
        /// <remarks/>
        public salesOrderItemEntity[] items;
        
        /// <remarks/>
        public salesOrderPaymentEntity payment;
        
        /// <remarks/>
        public salesOrderStatusHistoryEntity[] status_history;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductLinkAttributeEntity
    {
        
        /// <remarks/>
        public string code;
        
        /// <remarks/>
        public string type;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductLinkEntity
    {
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string type;
        
        /// <remarks/>
        public string set;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string position;
        
        /// <remarks/>
        public string qty;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductImageFileEntity
    {
        
        /// <remarks/>
        public string content;
        
        /// <remarks/>
        public string mime;
        
        /// <remarks/>
        public string name;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductAttributeMediaCreateEntity
    {
        
        /// <remarks/>
        public catalogProductImageFileEntity file;
        
        /// <remarks/>
        public string label;
        
        /// <remarks/>
        public string position;
        
        /// <remarks/>
        public string[] types;
        
        /// <remarks/>
        public string exclude;
        
        /// <remarks/>
        public string remove;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductAttributeMediaTypeEntity
    {
        
        /// <remarks/>
        public string code;
        
        /// <remarks/>
        public string scope;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductImageEntity
    {
        
        /// <remarks/>
        public string file;
        
        /// <remarks/>
        public string label;
        
        /// <remarks/>
        public string position;
        
        /// <remarks/>
        public string exclude;
        
        /// <remarks/>
        public string url;
        
        /// <remarks/>
        public string[] types;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductTierPriceEntity
    {
        
        /// <remarks/>
        public string customer_group_id;
        
        /// <remarks/>
        public string website;
        
        /// <remarks/>
        public int qty;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool qtySpecified;
        
        /// <remarks/>
        public double price;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool priceSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductTypeEntity
    {
        
        /// <remarks/>
        public string type;
        
        /// <remarks/>
        public string label;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductAttributeSetEntity
    {
        
        /// <remarks/>
        public int set_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool set_idSpecified;
        
        /// <remarks/>
        public string name;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductCreateEntity
    {
        
        /// <remarks/>
        public string[] categories;
        
        /// <remarks/>
        public string[] websites;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public string short_description;
        
        /// <remarks/>
        public string weight;
        
        /// <remarks/>
        public string status;
        
        /// <remarks/>
        public string url_key;
        
        /// <remarks/>
        public string url_path;
        
        /// <remarks/>
        public string visibility;
        
        /// <remarks/>
        public string[] category_ids;
        
        /// <remarks/>
        public string[] website_ids;
        
        /// <remarks/>
        public string has_options;
        
        /// <remarks/>
        public string gift_message_available;
        
        /// <remarks/>
        public string price;
        
        /// <remarks/>
        public string special_price;
        
        /// <remarks/>
        public string special_from_date;
        
        /// <remarks/>
        public string special_to_date;
        
        /// <remarks/>
        public string tax_class_id;
        
        /// <remarks/>
        public string[] tier_price;
        
        /// <remarks/>
        public string meta_title;
        
        /// <remarks/>
        public string meta_keyword;
        
        /// <remarks/>
        public string meta_description;
        
        /// <remarks/>
        public string custom_design;
        
        /// <remarks/>
        public string custom_layout_update;
        
        /// <remarks/>
        public string options_container;
        
        /// <remarks/>
        public associativeEntity[] additional_attributes;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class associativeEntity
    {
        
        /// <remarks/>
        public string key;
        
        /// <remarks/>
        public string value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductReturnEntity
    {
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string set;
        
        /// <remarks/>
        public string type;
        
        /// <remarks/>
        public string[] categories;
        
        /// <remarks/>
        public string[] websites;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string type_id;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public string short_description;
        
        /// <remarks/>
        public string weight;
        
        /// <remarks/>
        public string status;
        
        /// <remarks/>
        public string url_key;
        
        /// <remarks/>
        public string url_path;
        
        /// <remarks/>
        public string visibility;
        
        /// <remarks/>
        public string[] category_ids;
        
        /// <remarks/>
        public string[] website_ids;
        
        /// <remarks/>
        public string has_options;
        
        /// <remarks/>
        public string gift_message_available;
        
        /// <remarks/>
        public string price;
        
        /// <remarks/>
        public string special_price;
        
        /// <remarks/>
        public string special_from_date;
        
        /// <remarks/>
        public string special_to_date;
        
        /// <remarks/>
        public string tax_class_id;
        
        /// <remarks/>
        public string[] tier_price;
        
        /// <remarks/>
        public string meta_title;
        
        /// <remarks/>
        public string meta_keyword;
        
        /// <remarks/>
        public string meta_description;
        
        /// <remarks/>
        public string custom_design;
        
        /// <remarks/>
        public string custom_layout_update;
        
        /// <remarks/>
        public string options_container;
        
        /// <remarks/>
        public associativeEntity[] additional_attributes;
        
        /// <remarks/>
        public string enable_googlecheckout;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductRequestAttributes
    {
        
        /// <remarks/>
        public string[] attributes;
        
        /// <remarks/>
        public string[] additional_attributes;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductEntity
    {
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string set;
        
        /// <remarks/>
        public string type;
        
        /// <remarks/>
        public string[] category_ids;
        
        /// <remarks/>
        public string[] website_ids;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogAttributeOptionEntity
    {
        
        /// <remarks/>
        public string label;
        
        /// <remarks/>
        public string value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogAttributeEntity
    {
        
        /// <remarks/>
        public int attribute_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool attribute_idSpecified;
        
        /// <remarks/>
        public string code;
        
        /// <remarks/>
        public string type;
        
        /// <remarks/>
        public string required;
        
        /// <remarks/>
        public string scope;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogAssignedProduct
    {
        
        /// <remarks/>
        public int product_id;
        
        /// <remarks/>
        public string type;
        
        /// <remarks/>
        public int set;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public int position;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogCategoryEntityCreate
    {
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public int is_active;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_activeSpecified;
        
        /// <remarks/>
        public int position;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool positionSpecified;
        
        /// <remarks/>
        public string[] available_sort_by;
        
        /// <remarks/>
        public string custom_design;
        
        /// <remarks/>
        public int custom_design_apply;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool custom_design_applySpecified;
        
        /// <remarks/>
        public string custom_design_from;
        
        /// <remarks/>
        public string custom_design_to;
        
        /// <remarks/>
        public string custom_layout_update;
        
        /// <remarks/>
        public string default_sort_by;
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public string display_mode;
        
        /// <remarks/>
        public int is_anchor;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_anchorSpecified;
        
        /// <remarks/>
        public int landing_page;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool landing_pageSpecified;
        
        /// <remarks/>
        public string meta_description;
        
        /// <remarks/>
        public string meta_keywords;
        
        /// <remarks/>
        public string meta_title;
        
        /// <remarks/>
        public string page_layout;
        
        /// <remarks/>
        public string url_key;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogCategoryInfo
    {
        
        /// <remarks/>
        public string category_id;
        
        /// <remarks/>
        public int is_active;
        
        /// <remarks/>
        public string position;
        
        /// <remarks/>
        public string level;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string all_children;
        
        /// <remarks/>
        public string children;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string url_key;
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public string meta_title;
        
        /// <remarks/>
        public string meta_keywords;
        
        /// <remarks/>
        public string meta_description;
        
        /// <remarks/>
        public string path;
        
        /// <remarks/>
        public string url_path;
        
        /// <remarks/>
        public int children_count;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool children_countSpecified;
        
        /// <remarks/>
        public string display_mode;
        
        /// <remarks/>
        public int is_anchor;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_anchorSpecified;
        
        /// <remarks/>
        public string[] available_sort_by;
        
        /// <remarks/>
        public string custom_design;
        
        /// <remarks/>
        public string custom_design_apply;
        
        /// <remarks/>
        public string custom_design_from;
        
        /// <remarks/>
        public string custom_design_to;
        
        /// <remarks/>
        public string page_layout;
        
        /// <remarks/>
        public string custom_layout_update;
        
        /// <remarks/>
        public string default_sort_by;
        
        /// <remarks/>
        public int landing_page;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool landing_pageSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogCategoryEntityNoChildren
    {
        
        /// <remarks/>
        public int category_id;
        
        /// <remarks/>
        public int parent_id;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public int is_active;
        
        /// <remarks/>
        public int position;
        
        /// <remarks/>
        public int level;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogCategoryEntity
    {
        
        /// <remarks/>
        public int category_id;
        
        /// <remarks/>
        public int parent_id;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public int is_active;
        
        /// <remarks/>
        public int position;
        
        /// <remarks/>
        public int level;
        
        /// <remarks/>
        public catalogCategoryEntity[] children;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogCategoryTree
    {
        
        /// <remarks/>
        public int category_id;
        
        /// <remarks/>
        public int parent_id;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public int position;
        
        /// <remarks/>
        public int level;
        
        /// <remarks/>
        public catalogCategoryEntity[] children;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class customerAddressEntityCreate
    {
        
        /// <remarks/>
        public string city;
        
        /// <remarks/>
        public string company;
        
        /// <remarks/>
        public string country_id;
        
        /// <remarks/>
        public string fax;
        
        /// <remarks/>
        public string firstname;
        
        /// <remarks/>
        public string lastname;
        
        /// <remarks/>
        public string middlename;
        
        /// <remarks/>
        public string postcode;
        
        /// <remarks/>
        public string prefix;
        
        /// <remarks/>
        public int region_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool region_idSpecified;
        
        /// <remarks/>
        public string region;
        
        /// <remarks/>
        public string[] street;
        
        /// <remarks/>
        public string suffix;
        
        /// <remarks/>
        public string telephone;
        
        /// <remarks/>
        public bool is_default_billing;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_default_billingSpecified;
        
        /// <remarks/>
        public bool is_default_shipping;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_default_shippingSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class customerAddressEntity
    {
        
        /// <remarks/>
        public int customer_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool customer_idSpecified;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string city;
        
        /// <remarks/>
        public string company;
        
        /// <remarks/>
        public string country_id;
        
        /// <remarks/>
        public string fax;
        
        /// <remarks/>
        public string firstname;
        
        /// <remarks/>
        public string lastname;
        
        /// <remarks/>
        public string middlename;
        
        /// <remarks/>
        public string postcode;
        
        /// <remarks/>
        public string prefix;
        
        /// <remarks/>
        public string region;
        
        /// <remarks/>
        public int region_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool region_idSpecified;
        
        /// <remarks/>
        public string street;
        
        /// <remarks/>
        public string suffix;
        
        /// <remarks/>
        public string telephone;
        
        /// <remarks/>
        public bool is_default_billing;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_default_billingSpecified;
        
        /// <remarks/>
        public bool is_default_shipping;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_default_shippingSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class customerGroupEntity
    {
        
        /// <remarks/>
        public int customer_group_id;
        
        /// <remarks/>
        public string customer_group_code;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class customerCustomerEntityToCreate
    {
        
        /// <remarks/>
        public string email;
        
        /// <remarks/>
        public string firstname;
        
        /// <remarks/>
        public string lastname;
        
        /// <remarks/>
        public string password;
        
        /// <remarks/>
        public int website_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool website_idSpecified;
        
        /// <remarks/>
        public int store_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool store_idSpecified;
        
        /// <remarks/>
        public int group_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool group_idSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class customerCustomerEntity
    {
        
        /// <remarks/>
        public int customer_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool customer_idSpecified;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public int store_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool store_idSpecified;
        
        /// <remarks/>
        public int website_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool website_idSpecified;
        
        /// <remarks/>
        public string created_in;
        
        /// <remarks/>
        public string email;
        
        /// <remarks/>
        public string firstname;
        
        /// <remarks/>
        public string lastname;
        
        /// <remarks/>
        public int group_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool group_idSpecified;
        
        /// <remarks/>
        public string password_hash;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class complexFilter
    {
        
        /// <remarks/>
        public string key;
        
        /// <remarks/>
        public associativeEntity value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class filters
    {
        
        /// <remarks/>
        public associativeEntity[] filter;
        
        /// <remarks/>
        public complexFilter[] complex_filter;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class directoryRegionEntity
    {
        
        /// <remarks/>
        public string region_id;
        
        /// <remarks/>
        public string code;
        
        /// <remarks/>
        public string name;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class directoryCountryEntity
    {
        
        /// <remarks/>
        public string country_id;
        
        /// <remarks/>
        public string iso2_code;
        
        /// <remarks/>
        public string iso3_code;
        
        /// <remarks/>
        public string name;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.1.0.8000-736b5b66")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class existsFaltureEntity
    {
        
        /// <remarks/>
        public string code;
        
        /// <remarks/>
        public string message;
    }
}
